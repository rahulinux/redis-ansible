---
  - name: Adding redis user 
    user: name={{ redis_user }} shell=/usr/sbin/nologin system=yes comment="manage redis service"

  - name: Creating require directories for redis
    file: dest={{ item }} state=directory owner={{ redis_user }} group={{ redis_user }}
    with_items:
        - "{{ redis_work_dir }}"
        - "{{ redis_service_dir }}/{{ redis_port }}"
        - "{{ redis_data_dir }}/{{ redis_port }}"
        - "{{ redis_run_dir }}/{{ redis_port }}"
        - "{{ redis_log_dir }}/{{ redis_port }}"
    
  - name: Downloading Redis 
    get_url: url={{ redis_download_link }} dest={{ redis_work_dir }}/redis-{{ redis_version }}.tar.gz
 
  - name: Extracting Redis
    unarchive: src={{ redis_work_dir }}/redis-{{ redis_version }}.tar.gz dest={{ redis_work_dir }}
  
  - name: Compling Redis
    shell: make && make install chdir={{ redis_work_dir }}/redis-{{ redis_version }} 

  - copy: src={{ redis_work_dir }}/redis-{{ redis_version }}/src/redis-sentinel dest=/usr/local/bin/redis-sentinel mode=755

  - name: Registering Master IP
    local_action: copy dest=/tmp/master_ip content={{  ansible_default_ipv4.address }}
    when: redis_master

  - local_action: copy dest=/tmp/master_port content={{ redis_port }}
    when: redis_master

  - set_fact: master_ip={{ lookup('file','/tmp/master_ip') }}
  - set_fact: master_port={{ lookup('file','/tmp/master_port') }}

  - name: Configuring redis server
    template: src=redis.conf.jinja dest={{ redis_service_dir }}/{{ redis_port }}/redis-server.conf owner={{ redis_user }} group={{ redis_user }}

  - name: Configuring redis sentinel 
    template: src=redis-sentinel.conf.jinja dest={{ redis_service_dir }}/{{ redis_port }}/redis-sentinel.conf owner={{ redis_user }} group={{ redis_user }}

  - name: Configuring redis init script
    template: src=redis_init_script.jinja dest=/etc/init.d/redis_{{ redis_port }} mode=0755

  - name: Configuring redis sentinel init script
    template: src=redis_sentinel_init_script.jinja dest=/etc/init.d/redis_sentinel_{{ sentinel_port }} mode=0755
  
  - name: restarting services
    service: name={{ item }} state=restarted
    with_items: 
           - redis_{{ redis_port }}
           - redis_sentinel_{{ sentinel_port }}

